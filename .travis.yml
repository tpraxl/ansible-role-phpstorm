---
services: docker

branches:
  only:
    - master
    - /^test\/.*$/

env:
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: centos8
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: ubuntu1604
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: ubuntu1804
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: debian8
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: debian9
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distro: debian10
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

before_install:
  # Pull container.
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  - container_id=$(mktemp)
  # Run container in detached state.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Install dependencies.
  - 'docker exec "$(cat ${container_id})" ansible-galaxy install -r /etc/ansible/roles/role_under_test/tests/requirements.yml'

  # Ansible version debug output.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook --version'

  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

  # Test role.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'

  # Check for vmoptions set
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm bash -c "grep -e \"-Dide.no.platform.update=true\" /opt/jetbrains/phpstorm-*/bin/*.vmoptions"'

  # Test role idempotence.
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Ensure PhpStorm is installed and working (still won't startup because there is no graphics environment).
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm bash -c "/opt/jetbrains/phpstorm-*/bin/phpstorm.sh"; [ $? == 1 ]'
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm phpstorm; [ $? == 1 ]'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  slack:
    rooms:
      secure: G3PRfP5Iohec60i0bfx8NaTdRVIKjo7BjG24zHXCIItvfPRVQAOqWhiH7tTWYcOHc8JoMebT40RG3c8ErsCr++lR1woFsFWgxpNhMVIO4z87EjHJNuPyzazfc1H0mjOo62EUsGEQlEbnZXFWn5hwgIbKNk3E4GiYRssH4QbTIcgG/+O0r847pLvxsPIPhO7C9++aE041Efa9w+qhJoYLExBV7+NcabPUgAT5Tihi2fZSzfHGIlnImxnXTDghgLUxM2q2lzoyVgFykyDpDEGTNnlBT0QgChx1+pHs4/346v+Z0GVIPqUpeTMYkUMN2VpnBGstJKgVjVhxqtbiy1CzblC9lmo5Lgh1vYIj2oe82GgrGPF+k2nmOj2LZZmeWnJF9FJE+zQ+cWFAKDfsMsmXlmJqbgIQL5iSQp6oUkCLKATSJOsRlPt9oQwHRj5tIYseuNRIHjbcpafmvHrZGtotjxEYZ+MU6kyr3Z/cFsEVSLnG9JYZzjcPUApFNDPMRdiZGxI6YhWM3XegCEAK/jPMR6pNR8+XrqgY6u+3LWaBJMjbYytePhgB0yAeK2K8OcLr1illuCPKlfPWe0SMCr2yTT37I6YFV3hdNcbeGJOXsv2+76HWKswdiJVn0byqhTTi7aSHJnVh3ziYw0kmW2BCSCZV7cqlB6s6ZY4ipi4LdZw=
    on_success: change
    on_failure: always
